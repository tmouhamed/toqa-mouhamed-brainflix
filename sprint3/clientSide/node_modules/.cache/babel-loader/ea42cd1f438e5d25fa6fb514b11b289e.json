{"ast":null,"code":"var _jsxFileName = \"/work/tmouhamed/brainstation/projects/toqa-mouhamed-brainflix/sprint2/src/components/MainContent/MainContent.js\";\nimport React from 'react';\nimport Axios from 'axios';\nimport './MainContent.scss';\nimport Hero from '../Hero/Hero.js';\nimport MainVideo from '../MainVideo/MainVideo.js';\nimport Comment from '../Comments/Comment.js';\nimport SideVideo from '../SideVideo/SideVideo.js';\nimport Header from '../Header/Header';\nimport Form from '../Form/Form';\n\nclass MainContent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.url = 'https://project-2-api.herokuapp.com';\n    this.apiKey = '?api_key=66fa89b3-0fa2-46c4-ae2a-ae3ed0c1eda7';\n    this.state = {\n      mainVideos: {\n        comments: []\n      },\n      sideVideos: [],\n      exist: ''\n    };\n\n    this.getVideoList = () => {\n      Axios.get(\"\".concat(this.url, \"/videos/\").concat(this.apiKey)).then(response => {\n        this.setState({\n          sideVideos: response.data,\n          id: response.data[0].id\n        });\n      });\n    };\n\n    this.getMainVideo = id => {\n      if (id) {\n        Axios.get(\"\".concat(this.url, \"/videos/\").concat(id, \"/\").concat(this.apiKey)).then(response => {\n          if (this.state.mainVideos.id !== response.data.id) this.setState({\n            mainVideos: response.data\n          });\n        });\n      }\n    };\n  }\n\n  // postComment(id) {\n  //     Axios.post(`${this.url}/videos/${id}/comments/${this.apiKey}`)\n  //     .then(response => {\n  //         console.log(response);\n  //         // this.setState({\n  //         //     sideVideos: response.data,\n  //         //     id: response.data[0].id\n  //         // })\n  //     })\n  // }\n  // postComment = (comment) => {\n  //     let body = {\n  //         name: `Nigel`,\n  //         comment: comment\n  //     };\n  //     Axios.post(`${this.url}/videos/${id}/comments/${this.apiKey}`)\n  //         .then(response => {\n  //             let sortedComments = this.state.mainVideo\n  //             sortedComments.comments.unshift(request.data)\n  //             this.setState({\n  //                 sortedComments: sortedComments.comments\n  //             })\n  //             this.getVideos(this.props.match.params.id)\n  //         })\n  //         .catch(err => console.log(err))\n  // } //end of post comment method\n  componentDidMount() {\n    this.getMainVideo('1af0jruup5gu');\n    this.getVideoList();\n  }\n\n  componentDidUpdate(prevProps) {\n    //to make the homepage only for the first video \n    if (!this.props.match.params.id) {\n      this.getMainVideo('1af0jruup5gu');\n    } else if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.getMainVideo(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Hero, {\n      mainVideo: this.state.mainVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"main__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"main__content-article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MainVideo, {\n      mainVideo: this.state.mainVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"article\", {\n      className: \"main__content-comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"main__content-comments-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" Comments\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Comment, {\n      mainVideo: this.state.mainVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(SideVideo, {\n      sideVideo: this.state.sideVideos,\n      mainVideo: this.state.mainVideos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MainContent;","map":{"version":3,"sources":["/work/tmouhamed/brainstation/projects/toqa-mouhamed-brainflix/sprint2/src/components/MainContent/MainContent.js"],"names":["React","Axios","Hero","MainVideo","Comment","SideVideo","Header","Form","MainContent","Component","url","apiKey","state","mainVideos","comments","sideVideos","exist","getVideoList","get","then","response","setState","data","id","getMainVideo","componentDidMount","componentDidUpdate","prevProps","props","match","params","render","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\n\nimport './MainContent.scss';\nimport Hero from '../Hero/Hero.js';\nimport MainVideo from '../MainVideo/MainVideo.js';\nimport Comment from '../Comments/Comment.js';\nimport SideVideo from '../SideVideo/SideVideo.js';\nimport Header from '../Header/Header';\nimport Form from '../Form/Form';\n\nclass MainContent extends React.Component {\n    url = 'https://project-2-api.herokuapp.com';\n    apiKey = '?api_key=66fa89b3-0fa2-46c4-ae2a-ae3ed0c1eda7';\n\n    state = {\n        mainVideos: { comments: [] },\n        sideVideos: [],\n        exist: ''\n    }\n\n    getVideoList = () => {\n        Axios.get(`${this.url}/videos/${this.apiKey}`)\n            .then(response => {\n                this.setState({\n                    sideVideos: response.data,\n                    id: response.data[0].id\n                })\n            })\n    }\n\n    getMainVideo = (id) => {\n        if (id) {\n            Axios.get(`${this.url}/videos/${id}/${this.apiKey}`)\n                .then(response => {\n                    if (this.state.mainVideos.id !== response.data.id)\n                        this.setState({\n                            mainVideos: response.data\n                        })\n                })\n\n        }\n    }\n\n    // postComment(id) {\n    //     Axios.post(`${this.url}/videos/${id}/comments/${this.apiKey}`)\n    //     .then(response => {\n    //         console.log(response);\n    //         // this.setState({\n    //         //     sideVideos: response.data,\n    //         //     id: response.data[0].id\n    //         // })\n    //     })\n    // }\n    // postComment = (comment) => {\n\n    //     let body = {\n    //         name: `Nigel`,\n    //         comment: comment\n    //     };\n\n    //     Axios.post(`${this.url}/videos/${id}/comments/${this.apiKey}`)\n    //         .then(response => {\n    //             let sortedComments = this.state.mainVideo\n    //             sortedComments.comments.unshift(request.data)\n\n    //             this.setState({\n    //                 sortedComments: sortedComments.comments\n    //             })\n\n    //             this.getVideos(this.props.match.params.id)\n\n    //         })\n    //         .catch(err => console.log(err))\n    // } //end of post comment method\n\n    componentDidMount() {\n        this.getMainVideo('1af0jruup5gu');\n        this.getVideoList();\n    }\n\n    componentDidUpdate(prevProps) {\n        //to make the homepage only for the first video \n        if (!this.props.match.params.id) {\n            this.getMainVideo('1af0jruup5gu');\n        }\n        else if (this.props.match.params.id !== prevProps.match.params.id) {\n            this.getMainVideo(this.props.match.params.id);\n        }\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <>\n                <Header />\n                <main className=\"main\">\n                    <Hero mainVideo={this.state.mainVideos} />\n                    <section className=\"main__content\">\n                        <article className=\"main__content-article\">\n                            <MainVideo mainVideo={this.state.mainVideos} />\n                            <article className=\"main__content-comments\">\n                                <h4 className=\"main__content-comments-title\"> Comments</h4>\n                                <Form />\n                                <Comment mainVideo={this.state.mainVideos} />\n                            </article>\n                        </article>\n                        <SideVideo sideVideo={this.state.sideVideos} mainVideo={this.state.mainVideos} />\n                    </section>\n                </main>\n            </>\n        );\n\n    }\n}\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}